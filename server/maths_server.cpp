/*
* This is sample code generated by stubgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "maths.h"

char *
math_prog_1(unsigned long proc, void *argBuff, unsigned long *szResult)
{
    char *(*local)(char *);
    union {
        float sqr_1_arg;
        float exp_1_arg;
        float log10_1_arg;
    } argument{};

    switch (proc) {
        case SQR:
            argument.sqr_1_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) sqr_1_svc;
            *szResult = sizeof(float);
            break;

        case EXP:
            argument.exp_1_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) exp_1_svc;
            *szResult = sizeof(float);
            break;

        case LOG10:
            argument.log10_1_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) log10_1_svc;
            *szResult = sizeof(float);
            break;

        default:
            return nullptr;
    }

    auto result = (*local)(reinterpret_cast<char*>(&argument));
    return result;
}

float *
sqr_1_svc(float *argp)
{
    static float result;

    result = 2;

    return &result;
}

float *
exp_1_svc(float *argp)
{
    static float result;

    result = 2;

    return &result;
}

float *
log10_1_svc(float *argp)
{
    static float result;

    result = 3;

    return &result;
}

char *
math_prog_2(unsigned long proc, void *argBuff, unsigned long *szResult)
{
    char *result;
    char *(*local)(char *);
    union {
        float sqr_2_arg;
        float exp_2_arg;
        float log10_2_arg;
        float abs_2_arg;
    } argument{};

    switch (proc) {
        case SQR:
            argument.sqr_2_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) sqr_2_svc;
            break;

        case EXP:
            argument.exp_2_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) exp_2_svc;
            break;

        case LOG10:
            argument.log10_2_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) log10_2_svc;
            break;

        case ABS:
            argument.abs_2_arg = *static_cast<float*>(argBuff);
            local = (char *(*)(char *)) abs_2_svc;
            break;

        default:
            return nullptr;
    }

    result = (*local)(reinterpret_cast<char*>(&argument));
    return result;
}


float *
sqr_2_svc(float *argp)
{
    static float result;

    /*
     * insert server code here
     */

    return &result;
}

float *
exp_2_svc(float *argp)
{
    static float result;

    /*
     * insert server code here
     */

    return &result;
}

float *
log10_2_svc(float *argp)
{
    static float result;

    /*
     * insert server code here
     */

    return &result;
}

float *
abs_2_svc(float *argp)
{
    static float result;

    /*
     * insert server code here
     */

    return &result;
}
