/*
 * Please do not edit this file.
 * It was generated using stubgen.
 */

#include <memory.h>
#include "maths.h"

static struct timeval TIMEOUT = { 25, 0 };

float *
sqr_1(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, SQR,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
exp_1(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, EXP,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
log10_1(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, LOG10,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
sqr_2(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, SQR,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
exp_2(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, EXP,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
log10_2(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, LOG10,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}

float *
abs_2(float* argp, CLIENT *clnt) {
    static float clnt_res;

    memset((char *)&clnt_res, 0, sizeof(clnt_res));
    if (clnt_call (clnt, ABS,
                  (xdrproc_t) xdr_float, (caddr_t) argp,
                  (xdrproc_t) xdr_int, (caddr_t) &clnt_res,
                  TIMEOUT) != RPC_SUCCESS) {
                  return (nullptr);
    }
    return (&clnt_res);
}
